{
  "name": "medspasync-landing",
  "version": "1.0.0",
  "description": "Production landing and demo app for MedSpaSync Pro - AI-powered reconciliation for medical spas",
  "main": "server/index.js",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "scripts": {
    "start": "node server/index.js",
    "start:dev": "nodemon server/index.js",
    "start:prod": "NODE_ENV=production node server/index.js",
    "build": "npm run build:css && npm run build:js",
    "build:css": "tailwindcss -i tailwind-input.css -o public/tailwind.css --minify",
    "build:js": "webpack --mode=production",
    "build:dev": "npm run build:css && webpack --mode=development",
    "watch:css": "tailwindcss -i tailwind-input.css -o public/tailwind.css --watch",
    "watch:js": "webpack --mode=development --watch",
    "test": "jest --coverage",
    "test:unit": "jest test/unit",
    "test:integration": "jest test/integration",
    "test:demo": "node test/demo-test.js",
    "test:e2e": "playwright test",
    "test:watch": "jest --watch",
    "lint": "eslint . --ext .js,.jsx --fix",
    "lint:check": "eslint . --ext .js,.jsx",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "validate": "npm run lint:check && npm run format:check && npm run test && npm run security:audit",
    "prepare": "husky install",
    "precommit": "lint-staged",
    "postinstall": "npm run build:css",
    "clean": "rimraf dist/ public/tailwind.css coverage/",
    "docker:build": "docker build -t medspasync-pro .",
    "docker:run": "docker run -p 3000:3000 medspasync-pro",
    "deploy:staging": "npm run validate && npm run build && echo 'Deploy to staging'",
    "deploy:prod": "npm run validate && npm run build && echo 'Deploy to production'",
    "analyze:bundle": "webpack-bundle-analyzer dist/static/js/*.js",
    "db:migrate": "node scripts/migrate.js",
    "db:seed": "node scripts/seed.js",
    "backup:db": "node scripts/backup.js",
    "health:check": "node scripts/health-check.js"
  },
  "keywords": [
    "medical-spa",
    "reconciliation",
    "alle-rewards",
    "aspire-rewards",
    "pos-integration",
    "ai-matching",
    "healthcare-fintech",
    "automated-bookkeeping",
    "revenue-recovery",
    "HIPAA-compliant",
    "medical-spa-software",
    "financial-automation"
  ],
  "author": {
    "name": "MythosMediaCo",
    "email": "contact@mythosmedia.co",
    "url": "https://mythosmedia.co"
  },
  "contributors": [
    {
      "name": "Jacob Smith",
      "email": "jacob@medspasyncpro.com",
      "role": "Lead Developer & Medical Spa Industry Expert"
    }
  ],
  "license": "MIT",
  "homepage": "https://medspasyncpro.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/mythosmedia/medspasync-pro.git"
  },
  "bugs": {
    "url": "https://github.com/mythosmedia/medspasync-pro/issues",
    "email": "support@medspasyncpro.com"
  },
  "type": "commonjs",
  "dependencies": {
    "@aws-sdk/client-s3": "^3.456.0",
    "@slack/web-api": "^6.10.0",
    "@tailwindcss/forms": "^0.5.6",
    "@tailwindcss/typography": "^0.5.9",
    "aws-sdk": "^2.1507.0",
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.20.2",
    "bull": "^4.12.0",
    "cheerio": "^1.0.0-rc.12",
    "compression": "^1.8.0",
    "connect-mongo": "^5.1.0",
    "cors": "^2.8.5",
    "csv-parser": "^3.0.0",
    "dotenv": "^16.4.5",
    "express": "^5.1.0",
    "express-openapi-validator": "^5.1.4",
    "express-rate-limit": "^7.5.0",
    "express-session": "^1.17.3",
    "express-slow-down": "^2.0.1",
    "express-validator": "^7.0.1",
    "file-type": "^19.0.0",
    "helmet": "^7.1.0",
    "joi": "^17.12.0",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "mixpanel": "^0.18.0",
    "moment": "^2.30.0",
    "mongoose": "^8.15.1",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-cron": "^3.0.3",
    "nodemailer": "^6.10.1",
    "papaparse": "^5.4.1",
    "pdf-lib": "^1.17.1",
    "puppeteer": "^21.5.2",
    "rate-limiter-flexible": "^4.0.1",
    "redis": "^4.6.11",
    "sanitize-html": "^2.11.0",
    "sharp": "^0.33.0",
    "stripe": "^14.23.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "tailwindcss": "^3.4.0",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@faker-js/faker": "^8.3.1",
    "@playwright/test": "^1.40.1",
    "@types/jest": "^29.5.8",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "css-loader": "^6.8.1",
    "docker": "^1.0.0",
    "eslint": "^8.55.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-security": "^1.7.1",
    "faker": "^6.6.6",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "mini-css-extract-plugin": "^2.7.6",
    "mongodb-memory-server": "^9.1.3",
    "nock": "^13.4.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "supertest": "^6.3.3",
    "terser-webpack-plugin": "^5.3.9",
    "webpack": "^5.89.0",
    "webpack-bundle-analyzer": "^4.10.1",
    "webpack-cli": "^5.1.4"
  },
  "peerDependencies": {
    "react": ">=18.0.0",
    "react-dom": ">=18.0.0"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8",
    "utf-8-validate": "^6.0.3"
  },
  "browserslist": [
    "> 0.5%",
    "last 2 versions",
    "Firefox ESR",
    "not dead",
    "not IE 11"
  ],
  "lint-staged": {
    "*.{js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{css,scss,md,json}": [
      "prettier --write"
    ]
  },
  "jest": {
    "testEnvironment": "node",
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "server/**/*.js",
      "!server/node_modules/**",
      "!server/coverage/**",
      "!server/dist/**"
    ],
    "testMatch": [
      "**/test/**/*.test.js",
      "**/test/**/*.spec.js"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/test/setup.js"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test"
    }
  },
  "config": {
    "mongodbMemoryServer": {
      "version": "7.0.0"
    }
  },
  "volta": {
    "node": "18.18.2",
    "npm": "10.2.0"
  }
}
